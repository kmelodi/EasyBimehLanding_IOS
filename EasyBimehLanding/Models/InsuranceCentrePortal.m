//
//  EasyBimehLanding
//
//  This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
//
#import "InsuranceCentrePortal.h"

@implementation InsuranceCentrePortal

/**
* TODO: Write general description for this method
*/
@synthesize insuranceCentreId;

/**
* TODO: Write general description for this method
*/
@synthesize centreName;

/**
* TODO: Write general description for this method
*/
@synthesize subDomainName;

/**
* TODO: Write general description for this method
*/
@synthesize title;

/**
* TODO: Write general description for this method
*/
@synthesize subTitle;

/**
* TODO: Write general description for this method
*/
@synthesize contactUs;

/**
* TODO: Write general description for this method
*/
@synthesize aboutUs;

/**
* TODO: Write general description for this method
*/
@synthesize ourService;

/**
* TODO: Write general description for this method
*/
@synthesize termsConditions;

/**
* TODO: Write general description for this method
*/
@synthesize mcopyright;

/**
* TODO: Write general description for this method
*/
@synthesize headerTitle;

/**
* TODO: Write general description for this method
*/
@synthesize headerBody;

/**
* TODO: Write general description for this method
*/
@synthesize footerColor;

/**
* TODO: Write general description for this method
*/
@synthesize backgroundColor;

/**
* TODO: Write general description for this method
*/
@synthesize licensed;

/**
* TODO: Write general description for this method
*/
@synthesize defaultLogo;

/**
* TODO: Write general description for this method
*/
@synthesize titleColor;

/**
* TODO: Write general description for this method
*/
@synthesize subTitleColor;

/**
* TODO: Write general description for this method
*/
@synthesize eTrustSymbol;

/**
* TODO: Write general description for this method
*/
@synthesize digitalMediaOrganizerSymbol;

/**
* TODO: Write general description for this method
*/
@synthesize googlePlus;

/**
* TODO: Write general description for this method
*/
@synthesize telegram;

/**
* TODO: Write general description for this method
*/
@synthesize instagram;

/**
* TODO: Write general description for this method
*/
@synthesize faceBook;

/**
* TODO: Write general description for this method
*/
@synthesize twitter;

/**
* TODO: Write general description for this method
*/
@synthesize saturdayToWednesdayFromHour;

/**
* TODO: Write general description for this method
*/
@synthesize saturdayToWednesdayToHour;

/**
* TODO: Write general description for this method
*/
@synthesize thursdayFromHour;

/**
* TODO: Write general description for this method
*/
@synthesize thursdayToHour;

/**
* TODO: Write general description for this method
*/
@synthesize fridayFromHour;

/**
* TODO: Write general description for this method
*/
@synthesize fridayToHour;

/**
* TODO: Write general description for this method
*/
@synthesize metaMediaFileHeaderId;

/**
* TODO: Write general description for this method
*/
@synthesize metaMediaFileHeaderUrl;

/**
* TODO: Write general description for this method
*/
@synthesize metaMediaFileLogoId;

/**
* TODO: Write general description for this method
*/
@synthesize metaMediaFileLogoUrl;

/**
* TODO: Write general description for this method
*/
@synthesize metaMediaFileFaviconId;

/**
* TODO: Write general description for this method
*/
@synthesize metaMediaFileFaviconUrl;

/**
* TODO: Write general description for this method
*/
@synthesize metaMediaFileFooterId;

/**
* TODO: Write general description for this method
*/
@synthesize metaMediaFileFooterUrl;



/**
* Key mappings for the json serialization and deserialization
*/
+(NSDictionary*) keyMap
{
    NSMutableDictionary* map = [[NSMutableDictionary alloc] init];
    [map addEntriesFromDictionary: @{
        @"insuranceCentreId": @"insuranceCentreId",
        @"centreName": @"centreName",
        @"subDomainName": @"subDomainName",
        @"title": @"title",
        @"subTitle": @"subTitle",
        @"contactUs": @"contactUs",
        @"aboutUs": @"aboutUs",
        @"ourService": @"ourService",
        @"termsConditions": @"termsConditions",
        @"copyright": @"mcopyright",
        @"headerTitle": @"headerTitle",
        @"headerBody": @"headerBody",
        @"footerColor": @"footerColor",
        @"backgroundColor": @"backgroundColor",
        @"licensed": @"licensed",
        @"defaultLogo": @"defaultLogo",
        @"titleColor": @"titleColor",
        @"subTitleColor": @"subTitleColor",
        @"eTrustSymbol": @"eTrustSymbol",
        @"digitalMediaOrganizerSymbol": @"digitalMediaOrganizerSymbol",
        @"googlePlus": @"googlePlus",
        @"telegram": @"telegram",
        @"instagram": @"instagram",
        @"faceBook": @"faceBook",
        @"twitter": @"twitter",
        @"saturdayToWednesdayFromHour": @"saturdayToWednesdayFromHour",
        @"saturdayToWednesdayToHour": @"saturdayToWednesdayToHour",
        @"thursdayFromHour": @"thursdayFromHour",
        @"thursdayToHour": @"thursdayToHour",
        @"fridayFromHour": @"fridayFromHour",
        @"fridayToHour": @"fridayToHour",
        @"metaMediaFileHeaderId": @"metaMediaFileHeaderId",
        @"metaMediaFileHeaderUrl": @"metaMediaFileHeaderUrl",
        @"metaMediaFileLogoId": @"metaMediaFileLogoId",
        @"metaMediaFileLogoUrl": @"metaMediaFileLogoUrl",
        @"metaMediaFileFaviconId": @"metaMediaFileFaviconId",
        @"metaMediaFileFaviconUrl": @"metaMediaFileFaviconUrl",
        @"metaMediaFileFooterId": @"metaMediaFileFooterId",
        @"metaMediaFileFooterUrl": @"metaMediaFileFooterUrl"  
    }];

    return map;
}

/**
* Key mapper for json serialization and deserialization
*/
+(JSONKeyMapper*) keyMapper
{ 
  return [[JSONKeyMapper alloc] initWithDictionary: [self keyMap]];
}

/**
* Helps avoiding deserialization errors when one or more properties are missing
* @returns	True, indicating that all properties are optional for deserialization
*/
+(BOOL)propertyIsOptional:(NSString*) propertyName
{
    return YES;
}

@end
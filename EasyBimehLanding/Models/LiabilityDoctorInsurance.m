//
//  EasyBimehLanding
//
//  This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
//
#import "LiabilityDoctorInsurance.h"

@implementation LiabilityDoctorInsurance

/**
* آیا طرح بیمه ای فعالی دارد؟
*/
@synthesize hasPlan;

/**
* حوزه ی فعالیت
*/
@synthesize activityArea;

/**
* لیست تخصص ها
*/
@synthesize expertises;

/**
* لیست سقف تعهد
*/
@synthesize commitmentCeilings;

/**
* مبلغ تعهد
*/
@synthesize physicalCommitment;

/**
* لیست شرکت های بیمه
*/
@synthesize insuranceCompanies;

/**
* تخفیف های بیمه ای
*/
@synthesize insuranceRiskLevels;

/**
* دوره های بیمه ای
*/
@synthesize insurancePolicyTerms;

/**
* لیست استان ها
*/
@synthesize provinces;

/**
* لیست شهر ها
*/
@synthesize cities;

/**
* لیست مناطق شهر
*/
@synthesize cityRegions;

/**
* نحوه ی ارسال
*/
@synthesize shippingTypes;

/**
* روش های پستی
*/
@synthesize postTypes;

/**
* شرایط بیمه نامه
*/
@synthesize insurancePolicyCondition;

/**
* اطلاعات بیمه نامه
*/
@synthesize insuranceData;



/**
* Key mappings for the json serialization and deserialization
*/
+(NSDictionary*) keyMap
{
    NSMutableDictionary* map = [[NSMutableDictionary alloc] init];
    [map addEntriesFromDictionary: @{
        @"hasPlan": @"hasPlan",
        @"activityArea": @"activityArea",
        @"expertises": @"expertises",
        @"commitmentCeilings": @"commitmentCeilings",
        @"physicalCommitment": @"physicalCommitment",
        @"insuranceCompanies": @"insuranceCompanies",
        @"insuranceRiskLevels": @"insuranceRiskLevels",
        @"insurancePolicyTerms": @"insurancePolicyTerms",
        @"provinces": @"provinces",
        @"cities": @"cities",
        @"cityRegions": @"cityRegions",
        @"shippingTypes": @"shippingTypes",
        @"postTypes": @"postTypes",
        @"insurancePolicyCondition": @"insurancePolicyCondition",
        @"insuranceData": @"insuranceData"  
    }];

    return map;
}

/**
* Key mapper for json serialization and deserialization
*/
+(JSONKeyMapper*) keyMapper
{ 
  return [[JSONKeyMapper alloc] initWithDictionary: [self keyMap]];
}

/**
* Helps avoiding deserialization errors when one or more properties are missing
* @returns	True, indicating that all properties are optional for deserialization
*/
+(BOOL)propertyIsOptional:(NSString*) propertyName
{
    return YES;
}

@end